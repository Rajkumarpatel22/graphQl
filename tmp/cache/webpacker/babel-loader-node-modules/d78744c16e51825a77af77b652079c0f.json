{"ast":null,"code":"var _jsxFileName = \"/home/ongraph/Downloads/rails-react-crud-app-master/app/javascript/bundles/posts/index.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n// app/javascript/bundles/posts/index.js\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nvar PostsList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PostsList, _React$Component);\n\n  function PostsList(props) {\n    var _this;\n\n    _classCallCheck(this, PostsList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PostsList).call(this, props));\n\n    _this.fetchPostsList = function () {\n      fetch('/api/v1/posts').then(function (response) {\n        return response.json();\n      }).then(function (posts) {\n        return _this.setState({\n          posts: posts\n        });\n      });\n    };\n\n    _this.handleDelete = function (postId) {\n      fetch(\"/api/v1/posts/\".concat(postId), {\n        method: 'delete'\n      }).then(function (response) {\n        alert('Post deleted successfully');\n\n        _this.fetchPostsList();\n      });\n    };\n\n    _this.state = {\n      posts: []\n    };\n    return _this;\n  }\n\n  _createClass(PostsList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchPostsList();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var posts = this.state.posts;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"All Posts\"), React.createElement(Link, {\n        to: \"/posts/new\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"New Post\"), React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Title\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Is Published\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Actions\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, posts.map(function (post) {\n        return React.createElement(\"tr\", {\n          key: post.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, post.id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/posts/\".concat(post.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, post.title)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, post.description), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, post.is_published ? 'Yes' : 'No'), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/posts/\".concat(post.id, \"/edit\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.handleDelete(post.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, \"Delete\")));\n      }))));\n    }\n  }]);\n\n  return PostsList;\n}(React.Component);\n\nexport { PostsList as default };","map":{"version":3,"sources":["/home/ongraph/Downloads/rails-react-crud-app-master/app/javascript/bundles/posts/index.js"],"names":["React","Link","PostsList","props","fetchPostsList","fetch","then","response","json","posts","setState","handleDelete","postId","method","alert","state","map","post","id","title","description","is_published","Component"],"mappings":"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","sourcesContent":["// app/javascript/bundles/posts/index.js\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class PostsList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { posts: [] };\n  }\n\n  componentDidMount() {\n    this.fetchPostsList();\n  }\n\n  fetchPostsList = () => {\n    fetch('/api/v1/posts').\n      then((response) => response.json()).\n      then((posts) =>  this.setState({ posts }));\n  };\n\n  handleDelete = (postId) => {\n    fetch(`/api/v1/posts/${postId}`, { method: 'delete' }).\n      then((response) => {\n        alert('Post deleted successfully')\n        this.fetchPostsList();\n      });\n  }\n\n  render() {\n    const { posts } = this.state;\n    return (\n      <div>\n        <h3>All Posts</h3>\n        <Link to='/posts/new'>New Post</Link>\n        <table>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Title</th>\n              <th>Description</th>\n              <th>Is Published</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n          {\n            posts.map((post) => {\n              return (\n                <tr key={post.id}>\n                  <td>{post.id}</td>\n                  <td>\n                    <Link to={`/posts/${post.id}`}>\n                      {post.title}\n                    </Link>\n                  </td>\n                  <td>{post.description}</td>\n                  <td>{post.is_published ? 'Yes' : 'No' }</td>\n                  <td>\n                    <Link to={`/posts/${post.id}/edit`}>\n                      Edit\n                    </Link>\n                    <button onClick={() => this.handleDelete(post.id) }>\n                      Delete\n                    </button>\n                  </td>\n                </tr>\n              )\n            })\n          }\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}